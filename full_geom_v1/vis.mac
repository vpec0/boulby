# Use these open statements to open selected visualization
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 800x800-0+0
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
##############################################################
# Specify view angle:
/vis/viewer/set/projection p
/vis/viewer/set/upVector 0 0 1
/vis/viewer/set/viewpointVector 1 2 -0.2
/vis/viewer/set/lightsVector 0 1 1
#
# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100
/vis/viewer/set/background white
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#
# Decorations
#
# Axes, scale, etc.
# /vis/scene/add/scale   # Simple scale line
# /vis/scene/add/axes    # Simple axes: x=red, y=green, z=blue.
# /vis/scene/add/eventID # Drawn at end of event
/vis/scene/add/date    # Date stamp
#
/vis/viewer/set/style surface
#/vis/viewer/set/hiddenMarker false
#/vis/viewer/set/viewpointThetaPhi 80 0
#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
#
#
#
#
/control/execute vis_full_geometry.mac
#/control/execute vis_detector_only.mac
#/control/execute vis_pmts_only.mac
#/control/execute vis_ptfe_only.mac
#
#
